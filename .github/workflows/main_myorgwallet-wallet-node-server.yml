name: Build and deploy Node.js app to Azure Web App - MyOrgWallet-Wallet-Node-Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm' # Cache npm dependencies to speed up builds

      - name: Install dependencies
        run: npm ci

      - name: Verify critical files
        run: |
          ls -la server.js package.json package-lock.json || { echo "Missing critical files"; exit 1; }
          ls -la node_modules/express || { echo "Express not installed"; exit 1; }

      - name: Prepare deployment package
        run: |
          mkdir deploy
          cp -r server.js package.json package-lock.json node_modules/ deploy/
          zip -r release.zip deploy

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip
          retention-days: 10

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_C9451C0B762749E88DB6D686279FF2BD }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_ED19A14E83FD4E50BA73F4C96D8D5885 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_FF2CF21BA34844819EDFCD6D904B20D4 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'MyOrgWallet-Wallet-Node-Server'
          slot-name: 'Production'
          package: ./deploy
      
      # Set environment variables for deployment, including sensitive ones
      - name: Configure App Service environment variables
        uses: azure/appservice-settings@v1
        with:
          app-name: 'MyOrgWallet-Wallet-Node-Server'
          slot-name: 'Production'
          app-settings-json: |
            [
              { "name": "VITE_API_URL", "value": "${{ secrets.VITE_API_URL }}" },
              { "name": "VITE_BASE_PATH", "value": "${{ secrets.VITE_BASE_PATH }}" },
              { "name": "VITE_LINKEDIN_REDIRECT_URI", "value": "${{ secrets.VITE_LINKEDIN_REDIRECT_URI }}" },
              { "name": "VITE_X_REDIRECT_URI", "value": "${{ secrets.VITE_X_REDIRECT_URI }}" },
              { "name": "VITE_SHOPIFY_REDIRECT_URI", "value": "${{ secrets.VITE_SHOPIFY_REDIRECT_URI }}" },
              { "name": "VITE_PROVER_API_URL", "value": "${{ secrets.VITE_PROVER_API_URL }}" },
              { "name": "VITE_ORGSERVICE_API_URL", "value": "${{ secrets.VITE_ORGSERVICE_API_URL }}" },
              { "name": "GCLOUD_BUCKET_NAME", "value": "${{ secrets.GCLOUD_BUCKET_NAME }}" },
              { "name": "GOOGLE_APPLICATION_CREDENTIALS", "value": "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" },
              { "name": "LINKEDIN_CLIENT_ID", "value": "${{ secrets.LINKEDIN_CLIENT_ID }}" },
              { "name": "LINKEDIN_CLIENT_SECRET", "value": "${{ secrets.LINKEDIN_CLIENT_SECRET }}" },
              { "name": "X_CLIENT_ID", "value": "${{ secrets.X_CLIENT_ID }}" },
              { "name": "X_CLIENT_SECRET", "value": "${{ secrets.X_CLIENT_SECRET }}" },
              { "name": "API_URL", "value": "${{ secrets.API_URL }}" },
              { "name": "SHOPIFY_SHOP_NAME", "value": "${{ secrets.SHOPIFY_SHOP_NAME }}" },
              { "name": "SHOPIFY_CLIENT_ID", "value": "${{ secrets.SHOPIFY_CLIENT_ID }}" },
              { "name": "SHOPIFY_CLIENT_SECRET", "value": "${{ secrets.SHOPIFY_CLIENT_SECRET }}" },
              { "name": "SENDGRID_API_KEY", "value": "${{ secrets.SENDGRID_API_KEY }}" }
            ]